#include <iostream>
#include <vector>
using namespace std;
void printBoard(const vector<vector<char>>& board) {
    for (int i = 0; i < 3; ++i) {
        for (int j = 0; j < 3; ++j) {
            cout << board[i][j];
            if (j < 2) cout << " | ";
        }
        cout << endl;
        if (i < 2) cout << "---------" << endl;
    }
}
bool checkWin(const vector<vector<char>>& board, char player) {
    for (int i = 0; i < 3; ++i) {
        if (board[i][0] == player && board[i][1] == player && board[i][2] == player)
            return true;
        if (board[0][i] == player && board[1][i] == player && board[2][i] == player)
            return true;
    }
    if (board[0][0] == player && board[1][1] == player && board[2][2] == player)
        return true;
    if (board[0][2] == player && board[1][1] == player && board[2][0] == player)
        return true;
    return false;
}
bool boardFull(const vector<vector<char>>& board) {
    for (int i = 0; i < 3; ++i) {
        for (int j = 0; j < 3; ++j) {
            if (board[i][j] == ' ')
                return false;
        }
    }
    return true; 
}

int main() {
    vector<vector<char>> board(3, vector<char>(3, ' ')); 
    int row, col;
    char currentPlayer = 'X';

    cout << "Welcome to Tic-Tac-Toe!\n";
    cout << "Player 1 (X) - Player 2 (O)\n\n";
    while (true) {
        printBoard(board);
        cout << "Player " << currentPlayer << ", enter your move (row [1-3] and column [1-3]): ";
        cin >> row >> col;
        row--;
        col--;
        if (row >= 0 && row < 3 && col >= 0 && col < 3 && board[row][col] == ' ') {
            board[row][col] = currentPlayer;
            if (checkWin(board, currentPlayer)) 
                printBoard(board);
                cout << "Player " << currentPlayer << " wins! Congratulations!\n";
                break;
            } else if (boardFull(board)) {
                printBoard(board);
                cout << "It's a tie! Game over.\n";
                break; // End game
            }
            currentPlayer = (currentPlayer == 'X') ? 'O' : 'X';
        } else {
                cout << "Invalid move! Please try again.\n";
        }
    }

    return 0;
}
